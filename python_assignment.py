# -*- coding: utf-8 -*-
"""python-assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zOFh4vx1xkz0sItWAWaC7Ii8TCCxJPzG
"""

import math

def maxPathSum(tri, m, n):
  for i in range(m-1, -1, -1): 
       for j in range(i+1):
           if (tri[i+1][j] > tri[i+1][j+1]): 
                  tri[i][j] += tri[i+1][j] 
           else: 
               tri[i][j] += tri[i+1][j+1]    
  return tri[0][0]
    


values=list(map(int,input().strip().split(' ')))
a=math.log(len(values),2)
b=math.ceil(a)
tri,t=[],[]

z=0

for i in range(b):    
    j=0    
    while j<=i:       
       t.append(values[z])       
       j+=1       
       z+=1    
    while(j<b):        
       t.append(0)        
       j+=1    
    tri.append(t)    
    t=[]

s= maxPathSum(tri,b-1,b-1)

print(s)

